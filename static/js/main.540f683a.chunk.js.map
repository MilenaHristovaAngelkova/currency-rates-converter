{"version":3,"sources":["LongestArray.js","ConversionsData.js","App.js","reportWebVitals.js","index.js"],"names":["LongestArray","props","currRates","Object","values","outputConversions","sort","forEach","rate","i","length","Math","abs","toFixed","pop","longestArr","ConversionsData","entries","currencyRates","key","value","selectedOption","toUpperCase","Number","group1","group2","group3","a","b","map","entry","className","colSpan","keys","App","currs","useState","isPending","setIsPending","errorM","setErrorM","setSelectedOption","setCurrencyRates","status","setStatus","url","currentDate","Date","toLocaleString","year","month","day","useEffect","localStorage","getItem","JSON","parse","fetch","then","res","ok","Error","json","data","temp","curr","setItem","stringify","catch","err","message","htmlFor","name","id","defaultValue","onChange","e","target","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.540f683a.chunk.js","sourcesContent":["const LongestArray = (props) => {\r\n    const longestArr = () => {\r\n        let currRates = Object.values(props.outputConversions).sort();\r\n        currRates.forEach(rate => {\r\n            for (let i = currRates.length - 1; i >= 0; i--) {\r\n                if (Math.abs(currRates[i].toFixed(1) - rate.toFixed(1)) >= 0.6) {\r\n                    currRates.pop();\r\n                }\r\n            }\r\n        })\r\n\r\n        return currRates.length;\r\n    }\r\n\r\n    return (\r\n        <p>The amount of rates for the selected currency where exchange rates \r\n        differ among them by no more than 0.5 is <b>{longestArr()}</b>.</p>\r\n    );\r\n}\r\n \r\nexport default LongestArray;","import LongestArray from \"./LongestArray\";\r\n\r\nconst ConversionsData = (props) => {\r\n    let outputConversions = {};\r\n    for (let [key, value] of Object.entries(props.currencyRates)) {\r\n        if (key !== props.selectedOption) {\r\n            outputConversions[`${props.selectedOption.toUpperCase()}-${key.toUpperCase()}`] = Number(value);\r\n            outputConversions[`${key.toUpperCase()}-${props.selectedOption.toUpperCase()}`] = 1 / Number(value);\r\n        }\r\n    }\r\n\r\n    let group1 = {};\r\n    let group2 = {};\r\n    let group3 = {};\r\n\r\n    Object.entries(outputConversions).sort((a, b) => {\r\n        return a[1] - b[1];\r\n    }).map(entry => {\r\n        if (entry[1].toFixed(1) < 1) {\r\n           return group1[entry[0]] = entry[1];\r\n        } else if (entry[1].toFixed(1) >= 1 && entry[1].toFixed(1) < 1.5) {\r\n           return group2[entry[0]] = entry[1];\r\n        } else {\r\n           return group3[entry[0]] = entry[1];\r\n        }\r\n    });\r\n\r\n    return (\r\n        <article className=\"conversions\">\r\n            <table>\r\n                <thead>\r\n                    <tr className=\"table-heading\">\r\n                        <th colSpan=\"2\">Exchange Rates under 1</th>\r\n                    </tr>\r\n                    <tr className=\"col-headings\">\r\n                        <th>Currencies</th>\r\n                        <th>Rate</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {Object.entries(group1).sort((a, b) => {\r\n                            return a[1] - b[1];\r\n                        }).map(entry => {\r\n                            return(\r\n                               <tr key={entry[0]}>\r\n                                    <td>{entry[0]}</td>\r\n                                    <td>{entry[1].toFixed(1)}</td>\r\n                               </tr>\r\n                            )\r\n                        })\r\n                    }\r\n                </tbody>\r\n                <tfoot>\r\n                    <tr>\r\n                        <td>Count</td>\r\n                        <td>{Object.keys(group1).length}</td>\r\n                    </tr>\r\n                </tfoot>\r\n            </table>\r\n            <table>\r\n                <thead>\r\n                    <tr className=\"table-heading\">\r\n                        <th colSpan=\"2\">Exchange Rates between 1 and 1.4</th>\r\n                    </tr>\r\n                    <tr className=\"col-headings\">\r\n                        <th>Currencies</th>\r\n                        <th>Rate</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {Object.entries(group2).sort((a, b) => {\r\n                            return a[1] - b[1];\r\n                        }).map(entry => {\r\n                            return(\r\n                               <tr key={entry[0]}>\r\n                                    <td>{entry[0]}</td>\r\n                                    <td>{entry[1].toFixed(1)}</td>\r\n                               </tr>\r\n                            )\r\n                        })\r\n                    }\r\n                </tbody>\r\n                <tfoot>\r\n                    <tr>\r\n                        <td>Count</td>\r\n                        <td>{Object.keys(group2).length}</td>\r\n                    </tr>\r\n                </tfoot>\r\n            </table>\r\n            <table>\r\n                <thead>\r\n                    <tr className=\"table-heading\">\r\n                        <th colSpan=\"2\">Exchange Rates from 1.5</th>\r\n                    </tr>\r\n                    <tr className=\"col-headings\">\r\n                        <th>Currencies</th>\r\n                        <th>Rate</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {Object.entries(group3).sort((a, b) => {\r\n                            return a[1] - b[1];\r\n                        }).map(entry => {\r\n                            return(\r\n                               <tr key={entry[0]}>\r\n                                    <td>{entry[0]}</td>\r\n                                    <td>{entry[1].toFixed(1)}</td>\r\n                               </tr>\r\n                            )\r\n                        })\r\n                    }\r\n                </tbody>\r\n                <tfoot>\r\n                    <tr>\r\n                        <td>Count</td>\r\n                        <td>{Object.keys(group3).length}</td>\r\n                    </tr>\r\n                </tfoot>\r\n            </table>\r\n            <LongestArray outputConversions={outputConversions}/>        \r\n        </article>\r\n    );\r\n}\r\n \r\nexport default ConversionsData;","import { useState, useEffect } from 'react';\nimport ConversionsData from './ConversionsData';\n\nfunction App() {\n  const currs = [\"usd\", \"eur\", \"aud\", \"cad\", \"chf\", \"nzd\", \"bgn\"];\n  const [isPending, setIsPending] = useState(true);\n  const [errorM, setErrorM] = useState(\"\");\n  const [selectedOption, setSelectedOption] = useState(\"usd\");\n  const [currencyRates, setCurrencyRates] = useState({});\n  const [status, setStatus] = useState(\"\");\n  let url = \"https://cdn.jsdelivr.net/gh/fawazahmed0/currency-api@1/latest/currencies/\" + selectedOption + \".json\";\n\n  let date = new Date();\n  let currentDate = date.toLocaleString(\"az-AZ\", {  \n    year: \"numeric\",\n    month: \"2-digit\",\n    day: \"2-digit\"\n  })\n\n  useEffect(() => {\n    if (localStorage.getItem(`${selectedOption}-${currentDate}`)) {\n      setCurrencyRates(JSON.parse(localStorage.getItem(`${selectedOption}-${currentDate}`)));\n      setIsPending(false);\n      setStatus('success');\n    }\n\n      fetch(url)\n        .then(async res => {\n          if (!res.ok) {\n            setIsPending(false);\n            setErrorM(\"Could not peform the current fetch request.\");\n            throw new Error (\"Could not peform the current fetch request.\")\n          }\n          return res.json();\n        })\n        .then(data => {\n          let temp = {};\n          currs.forEach(curr => {\n            temp[curr] = data[selectedOption][curr];\n          })\n\n          setIsPending(false);\n          setCurrencyRates(temp);\n          setStatus(\"success\");\n\n          let key = `${selectedOption}-${currentDate}`;\n          localStorage.setItem(key, JSON.stringify(currencyRates));\n        })\n        .catch(err => {\n          setIsPending(false);\n          setErrorM(err.message);\n        })\n  }, [selectedOption]);\n\n  return (\n    <div className=\"App\">\n      <h1>Exchange Rates Information</h1>    \n      <form>\n        <label htmlFor=\"currency\">See currency rates for: </label>\n        <select name=\"currency\" id=\"currency\" defaultValue=\"usd\" onChange={(e) => setSelectedOption(e.target.value)}>\n          {currs.map(curr => {\n            return(\n              <option value={curr} key={curr}>{curr.toUpperCase()}</option>\n            )\n          })}\n        </select>\n      </form>\n      {isPending && <p className=\"state-info\">Loading...</p>}\n      {errorM && <p className=\"state-info\">{ errorM }</p>}\n      {status === \"success\" ? <ConversionsData selectedOption={selectedOption} currencyRates={currencyRates} /> : \n        <p className=\"state-info\">Something went wrong.</p>}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}